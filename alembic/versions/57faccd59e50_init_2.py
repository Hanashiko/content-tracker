"""init 2

Revision ID: 57faccd59e50
Revises: b83c0c26dd8c
Create Date: 2025-06-14 23:45:27.236503

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '57faccd59e50'
down_revision: Union[str, None] = 'b83c0c26dd8c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('fullname', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email_address', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('students')
    op.drop_table('majors')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('majors',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('majors_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('major_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('major_description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('count_students', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='majors_pkey'),
    sa.UniqueConstraint('major_name', name='majors_major_name_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('students',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('enrollment_year', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('course', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('special_notes', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('major_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['major_id'], ['majors.id'], name=op.f('students_major_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('students_pkey')),
    sa.UniqueConstraint('email', name=op.f('students_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('phone_number', name=op.f('students_phone_number_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.drop_table('address')
    op.drop_table('user_account')
    # ### end Alembic commands ###
